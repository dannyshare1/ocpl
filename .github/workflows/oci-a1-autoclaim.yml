name: OCI A1 Auto-Claim

on:
  workflow_dispatch: {}
  # schedule:
  #   - cron: "*/10 * * * *"   # 确认无误后再打开定时
  push:
    branches: [ "main" ]

concurrency:
  group: oci-a1-autoclaim
  cancel-in-progress: true

jobs:
  claim:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      contents: read
    env:
      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
      TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -q --upgrade oci python-dotenv requests

      - name: Check required secrets
        shell: bash
        env:
          OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}
          OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
          OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
          OCI_REGION: ${{ secrets.OCI_REGION }}
          OCI_PRIVATE_KEY_PEM: ${{ secrets.OCI_PRIVATE_KEY_PEM }}
          COMPARTMENT_OCID: ${{ secrets.COMPARTMENT_OCID }}
          SUBNET_OCID: ${{ secrets.SUBNET_OCID }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          missing=0
          for var in OCI_USER_OCID OCI_TENANCY_OCID OCI_FINGERPRINT OCI_REGION OCI_PRIVATE_KEY_PEM COMPARTMENT_OCID SUBNET_OCID SSH_PUBLIC_KEY; do
            if [ -z "${!var}" ]; then
              echo "::error::Missing secret: $var"
              missing=1
            fi
          done
          if [ $missing -ne 0 ]; then
            exit 1
          fi

      - name: Prepare OCI config & .env
        shell: bash
        env:
          OCI_USER_OCID: ${{ secrets.OCI_USER_OCID }}
          OCI_TENANCY_OCID: ${{ secrets.OCI_TENANCY_OCID }}
          OCI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
          OCI_REGION: ${{ secrets.OCI_REGION }}
          OCI_PRIVATE_KEY_PEM: ${{ secrets.OCI_PRIVATE_KEY_PEM }}
          COMPARTMENT_OCID: ${{ secrets.COMPARTMENT_OCID }}
          SUBNET_OCID: ${{ secrets.SUBNET_OCID }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
          IMAGE_OCID: ${{ secrets.IMAGE_OCID }}
        run: |
          mkdir -p ~/.oci ~/.ssh
          printf "%s\n" "$OCI_PRIVATE_KEY_PEM" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          cat > ~/.oci/config <<EOF
          [DEFAULT]
          user=${OCI_USER_OCID}
          fingerprint=${OCI_FINGERPRINT}
          tenancy=${OCI_TENANCY_OCID}
          region=${OCI_REGION}
          key_file=/home/runner/.oci/oci_api_key.pem
          EOF
          printf "%s\n" "$SSH_PUBLIC_KEY" > ~/.ssh/oci_ed25519.pub
          cat > .env <<EOF
          OCI_CONFIG_FILE=/home/runner/.oci/config
          OCI_PROFILE=DEFAULT
          COMPARTMENT_OCID=${COMPARTMENT_OCID}
          SUBNET_OCID=${SUBNET_OCID}
          SSH_PUBLIC_KEY_PATH=/home/runner/.ssh/oci_ed25519.pub
          IMAGE_OCID=${IMAGE_OCID}
          INSTANCE_NAME_PREFIX=a1-free
          BOOT_VOLUME_GB=50
          SLEEP_SECONDS=120
          ADS=AD-1,AD-2,AD-3
          OCPUS=4,2,1
          MEM_PER_OCPU=6
          TG_BOT_TOKEN=${TG_BOT_TOKEN}
          TG_CHAT_ID=${TG_CHAT_ID}
          EOF
          echo "==== generated .env ===="
          sed -n '1,12p' .env

      - name: Telegram test ping
        if: ${{ env.TG_BOT_TOKEN != '' && env.TG_CHAT_ID != '' }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT_ID}" \
            -d text="OCI A1 workflow started ✅ on $GITHUB_REPOSITORY ($GITHUB_RUN_ID)"

      - name: Run auto-claim (tee to log)
        run: |
          set -o pipefail
          python oci_a1_autoclaim.py |& tee run.log

      - name: Upload logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: run-logs
          path: |
            run.log
            SUCCESS.txt
          if-no-files-found: warn
